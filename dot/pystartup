"""Indentable rlcompleter

Extend standard rlcompleter module to let tab key can indent
and also completing valid Python identifiers and keywords."""

# http://gunnarwrobel.de/wiki/Python.html
import atexit
import logging
import os

import pprint
pp = pprint.pprint
pf = pprint.pformat

# On osx, the 'readline' py module uses osx's libedit instead
# of normal (gnu) libreadline. And it's not quite compatible,
# which shows up via obtuse failures reading readline history files.
# Using the gnureadline from pypi (which uses regular gnu readline)
# fixes this.
try:
    import gnureadline as readline
except ImportError:
    import readline
import rlcompleter

console_handler = logging.StreamHandler()
formatter = logging.Formatter("%(asctime)s - %(levelname)s: %(message)s")
console_handler.setFormatter(formatter)
root_log = logging.getLogger('')
root_log.addHandler(console_handler)
ROOT_LOG_LEVEL = logging.ERROR
root_log.setLevel(ROOT_LOG_LEVEL)

log = logging.getLogger('repl')
log.addHandler(console_handler)
log.setLevel(logging.DEBUG)

class IrlCompleter(rlcompleter.Completer):
    def complete(self, text, state):
        if not text:
            return ['    ', None][state]
        else:
            import rlcompleter
            return rlcompleter.Completer.complete(self, text, state)

readline.set_completer(IrlCompleter().complete)
readline.parse_and_bind("tab: complete")

historyPath = os.path.expanduser("~/.pyhistory")

def save_history(historyPath=historyPath):
    import readline
    readline.write_history_file(historyPath)

if os.path.exists(historyPath):
    readline.read_history_file(historyPath)

atexit.register(save_history)
del os, atexit, readline, rlcompleter, save_history, historyPath
