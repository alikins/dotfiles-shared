
# we provide a ls wrapper instead of polluting env with LS_COLORS
# set USER_LS_COLORS so /etc/profile.d/colors.sh doesn't set up LS_COLORS
USER_LS_COLORS=
export USER_LS_COLORS

C_NICE_ORANGE="\[\033[38;5;166m\]"
# C_NICE_ORANGE="\[\033[38;166m\]"
#C_NICE_ORANGE="\[\033[38;208m\]"
#C_NICE_FOO="\[\033[36;5;166m\]"
C_NICE_FOO="\[\033[36;166m\]"
C_RST='\[\033[m\]'

set_os_info_env ()
{
    _os_version_id=$(grep ^VERSION_ID= /etc/os-release)
    _os_id=$(grep ^ID= /etc/os-release)
    export ${_os_id//\"/}
    export ${_os_version_id//\"/}

    if [[ "${ID}" == "fedora" ]] ; then
        ID='F'
        export ID
    fi
    # prompt, user@host dir
    OS_SLUG="${ID}${VERSION_ID}"
    PS1_SLUG=""
    PS1_SLUG+="[${C_NICE_ORANGE}\h:${C_RST}${C_NICE_FOO}${OS_SLUG}:${C_NICE_ORANGE}\W${C_RST}"
}

GIT_PROMPT="/usr/share/git-core/contrib/completion/git-prompt.sh"
export GIT_PROMPT

set_os_info_env
PS1=${PS1_SLUG}
#PS1+="[${C_NICE_ORANGE}\W${C_RST}"
# git prompt stuff

if [ -f "${GIT_PROMPT}" ] ; then
    source "${GIT_PROMPT}"
    # export GIT_PS1_SHOWDIRTYSTATE=1
    # GIT_PS1_SHOWSTASHSTATE=1
    export GIT_PS1_SHOWUNTRACKEDFILES=1
    export GIT_PS1_SHOWUPSTREAM="auto"
    export GIT_PS1_SHOWUPSTREAM="verbose"
    export GIT_PS1_SHOWCOLORHINTS=1
    PS1+='$(__git_ps1 " (%s)")]\$ '
    #PS1='[\u@ \W$(__git_ps1 " (%s)")]\$ '
else
    PS1+='[" (%s)")]\$ '
fi

VAGRANT_DEFAULT_PROVIDER=libvirt
export VAGRANT_DEFAULT_PROVIDER

# use vimx if we has a DISPLAY and it exists
# vimx enabled X cut and paste
if [[ -n "$DISPLAY" ]] ; then
    if [ -e /usr/bin/vimx ] ; then
        alias vim="/usr/bin/vimx"
    fi
else
    alias vim="/usr/bin/vim"
fi

# we have a better version... Note this version doesn't
# work on osx, where we just make do with the default.
# make this quiet
unalias which > /dev/null 2>&1  || :

which ()
{
   (alias; declare -f) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot $@
}

# simple substring find from .
finds ()
{
    find -name "*$1*" | grep -v .git
}

# completions for pipx
eval "$(register-python-argcomplete pipx)"

# eval "$(_PULP_COMPLETE=source_bash pulp)"
